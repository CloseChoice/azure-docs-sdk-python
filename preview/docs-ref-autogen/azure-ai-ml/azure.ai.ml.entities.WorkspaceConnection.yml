### YamlMime:PythonClass
uid: azure.ai.ml.entities.WorkspaceConnection
name: WorkspaceConnection
fullName: azure.ai.ml.entities.WorkspaceConnection
module: azure.ai.ml.entities
inheritances:
- azure.ai.ml.entities._resource.Resource
summary: 'Azure ML workspace connection provides a secure way to store

  authentication and configuration information needed to connect and interact

  with the external resources.'
constructor:
  syntax: 'WorkspaceConnection(*, target: str, type: str, credentials: Union[azure.ai.ml.entities._workspace.connections.credentials.PatTokenCredentials,
    azure.ai.ml.entities._workspace.connections.credentials.SasTokenCredentials, azure.ai.ml.entities._workspace.connections.credentials.UsernamePasswordCredentials,
    azure.ai.ml.entities._workspace.connections.credentials.ManagedIdentityCredentials,
    azure.ai.ml.entities._workspace.connections.credentials.ServicePrincipalCredentials],
    metadata: Optional[Dict[str, Any]] = None, **kwargs)'
  parameters:
  - name: name
    description: Name of the workspace connection.
    isRequired: true
    types:
    - <xref:str>
  - name: target
    description: The URL or ARM resource ID of the external resource.
    isRequired: true
    types:
    - <xref:str>
  - name: credentials
    description: The credentials for authenticating to the external resource.
    isRequired: true
    types:
    - <xref:Union>[<xref:PatTokenCredentials>, <xref:SasTokenCredentials>, <xref:UsernamePasswordCredentials,ManagedIdentityCredentials>]
  - name: type
    description: The category of external resource for this connection.
    isRequired: true
    types:
    - <xref:<xref:The type of workspace connection>, <xref:possible values are:>[<xref:"git">,
      <xref:"python_feed">, <xref:"container_registry">, <xref:"feature_store">]>
methods:
- uid: azure.ai.ml.entities.WorkspaceConnection.dump
  name: dump
  summary: Dump the workspace connection spec into a file in yaml format.
  signature: 'dump(*args, dest: Optional[Union[str, os.PathLike, IO]] = None, path:
    Optional[Union[os.PathLike, str]] = None, **kwargs) -> None'
  parameters:
  - name: dest
    description: 'The destination to receive this workspace connection''s spec.

      Must be either a path to a local file, or an already-open file stream.

      If dest is a file path, a new file will be created,

      and an exception is raised if the file exists.

      If dest is an open file, the file will be written to directly,

      and an exception will be raised if the file is not writable.'
    isRequired: true
    types:
    - <xref:Union>[<xref:PathLike>, <xref:str>, <xref:IO>[<xref:AnyStr>]]
  - name: path
    description: 'Deprecated path to a local file as the target, a new file

      will be created, raises exception if the file exists.

      It''s recommended what you change ''path='' inputs to ''dest=''.

      The first unnamed input of this function will also be treated like

      a path input.'
    isRequired: true
    types:
    - <xref:Union>[<xref:str>, <xref:Pathlike>]
attributes:
- uid: azure.ai.ml.entities.WorkspaceConnection.credentials
  name: credentials
  summary: Credentials for workspace connection.
  return:
    description: Credentials for workspace connection.
    types:
    - <xref:WorkspaceConnectionCredentials>
- uid: azure.ai.ml.entities.WorkspaceConnection.metadata
  name: metadata
  summary: Metadata for workspace connection.
  return:
    description: Metadata for workspace connection.
    types:
    - <xref:Dict>[<xref:str>, <xref:Any>]
- uid: azure.ai.ml.entities.WorkspaceConnection.target
  name: target
  summary: Target url for the workspace connection.
  return:
    description: Target of the workspace connection.
    types:
    - <xref:str>
- uid: azure.ai.ml.entities.WorkspaceConnection.type
  name: type
  summary: 'Type of the workspace connection, supported are ''Git'', ''PythonFeed''

    and ''ContainerRegistry''.'
  return:
    description: Type of the job.
    types:
    - <xref:str>
